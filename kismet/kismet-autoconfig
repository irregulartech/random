#!/bin/sh
VERS="v0.1"
if [ -n "${1}" ]; then
  if ! touch "${1}" || [ ! -w "${1}" ]; then
    printf "Unable to write to config %s\n" "${1}"
    exit 1
  else
    if [ "$(awk -F. '{print $1}' /proc/uptime)" -lt 60 ]; then
      sleepy_tyme=$(( 60 - $(awk -F. '{print $1}' /proc/uptime) ))
      printf "Sleeping for %s seconds before writing config...\n" "${sleepy_tyme}"
      sleep "${sleepy_tyme}"
    fi
  fi
fi

kismet_site=${1:-/dev/stdout}
printf "kismet-autoconfig ${VERS} writing to %s\n" "${kismet_site}"

printf "#WARNING: This file is generated by kismet-autoconfig and cannot be edited!!!\n\n" > "${kismet_site}"

for nxp in $(ls /dev/nxp_kw41z* 2> /dev/null); do
  printf "#NXP_KW1Z btle and zigbee sniffer\n" >> "${kismet_site}"
  printf "source=nxp_kw41z:device=${nxp},type=nxp_kw41z,phy=all\n" >> "${kismet_site}"
done

bthci="$(hciconfig -a | awk -F: '/hci/{print $1}')"
if [ -n "${bthci}" ]; then
  for hci in ${bthci}; do
    printf "#bluetooth classic *active* discovery\n" >> "${kismet_site}"
    printf "source=${hci}:type=linuxbluetooth\n" >> "${kismet_site}"
  done
fi

mousejack="$(lsusb | grep Nordic | awk '{print $2"-"$4}')"
if [ -n "${mousejack}" ]; then
  for dongle in ${mousejack}; do
    printf "#mousejack\n" >> "${kismet_site}"
    printf "source=mousejack-${dongle}hop_rate=82/sec,type=nrfmousejack\n" >> "${kismet_site}"
  done
fi

#make sure we kill any left over rtl_433
killall rtl_433 > /dev/null 2>&1
sleep 1
killall -9 rtl_433 > /dev/null 2>&1
sleep 1
rtl_num_devices=$(rtl_eeprom 2>&1 >/dev/null | grep "Found [0-9][0-9]*" | sed -E 's/.*([0-9]+).*/\1/')
if [ -n "${rtl_num_devices}" ]; then
  for i in $(seq 1 "${rtl_num_devices}"); do
    rtl_device=$((i-1))
    case ${rtl_device} in
      0) freq="315" ;;
      1) freq="433.92" ;;
      2) freq="915" ;;
      3) freq="868.3" ;;
      4) freq="adsb" ;;
      5) freq="amr" ;;
    esac
    printf "#rtl-sdr ${rtl_device}\n" >> "${kismet_site}"
    if [ "${freq}" = "adsb" ]; then
      printf "source=rtladsb-0:name=rtladsb,type=rtladsb\n" >> "${kismet_site}"
    elif [ "${freq}" = "amr" ]; then
      printf "source=rtlamr-0:name=rtlamr,type=rtlamr\n" >> "${kismet_site}"
    else
      printf "source=rtl433-${rtl_device}:channel=${freq}MHz,name=${freq}\n" >> "${kismet_site}"
    fi
  done
fi

for wlan in $(airmon-ng | grep --color=never phy | awk '{print $2}'); do
  printf "source=${wlan}:default_ht20=true,type=linuxwifi\n" >> "${kismet_site}"
done

printf "#gps\n" >> "${kismet_site}"
printf "gps=gpsd:host=localhost,port=2947,reconnect=true\n" >> "${kismet_site}"

printf "#log stuff\n" >> "${kismet_site}"
mkdir -p /root/kismet
printf "log_prefix=/root/kismet\n" >> "${kismet_site}"
printf "log_title=$(hostname)\n" >> "${kismet_site}"
printf "hidedata=true\n" >> "${kismet_site}"
printf "kis_log_duplicate_packets=true\n" >> "${kismet_site}"
